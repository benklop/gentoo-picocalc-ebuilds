diff '--color=auto' -u -r a/adb/adbd_auth.cpp b/adb/adbd_auth.cpp
--- a/adb/adbd_auth.cpp 2025-09-23 01:51:31.968261287 -0000
+++ b/adb/adbd_auth.cpp 2025-09-23 02:00:56.841087321 -0000
@@ -34,6 +34,7 @@
 #include <openssl/obj_mac.h>
 #include <openssl/rsa.h>
 #include <openssl/sha.h>
+#include <openssl/evp.h>
 
 static fdevent listener_fde;
 static fdevent framework_fde;
@@ -207,10 +208,29 @@
                     continue;
                 }
 
-                bool verified =
-                    (RSA_verify(NID_sha1, reinterpret_cast<const uint8_t*>(token), token_size,
-                                reinterpret_cast<const uint8_t*>(sig), sig_len, key) == 1);
+               bool verified = false;
+#if OPENSSL_VERSION_NUMBER >= 0x30000000L
+                // OpenSSL 3.0+ - use EVP API
+                EVP_PKEY* pkey = EVP_PKEY_new();
+                if (pkey && EVP_PKEY_assign_RSA(pkey, key) == 1) {
+                    EVP_MD_CTX* ctx = EVP_MD_CTX_new();
+                    if (ctx) {
+                        if (EVP_DigestVerifyInit(ctx, nullptr, EVP_sha1(), nullptr, pkey) == 1 &&
+                            EVP_DigestVerifyUpdate(ctx, token, token_size) == 1) {
+                            verified = (EVP_DigestVerifyFinal(ctx, reinterpret_cast<const uint8_t*>(sig), sig_len) == 1);
+                        }
+                        EVP_MD_CTX_free(ctx);
+                    }
+                    EVP_PKEY_free(pkey); // This also frees the RSA key
+                } else {
+                    RSA_free(key); // Fallback if EVP_PKEY_assign_RSA failed
+                }
+#else
+                // OpenSSL 1.1.x and older - use legacy RSA API
+                verified = (RSA_verify(NID_sha1, reinterpret_cast<const uint8_t*>(token), token_size,
+                                       reinterpret_cast<const uint8_t*>(sig), sig_len, key) == 1);
                 RSA_free(key);
+#endif
                 if (verified) return true;
             }
         }

diff '--color=auto' -u -r a/libcrypto_utils/android_pubkey.c b/libcrypto_utils/android_pubkey.c
--- a/libcrypto_utils/android_pubkey.c  2025-09-23 02:10:06.440139165 -0000
+++ b/libcrypto_utils/android_pubkey.c  2025-09-23 02:11:02.469150669 -0000
@@ -14,6 +14,8 @@
  * limitations under the License.
  */
 
+#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+
 #include <crypto_utils/android_pubkey.h>
 
 #include <assert.h>
